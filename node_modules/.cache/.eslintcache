[{"/Users/alex.vysocki/Desktop/Project/pizza-app/src/index.js":"1","/Users/alex.vysocki/Desktop/Project/pizza-app/src/App.js":"2","/Users/alex.vysocki/Desktop/Project/pizza-app/src/Cart.js":"3","/Users/alex.vysocki/Desktop/Project/pizza-app/src/Catalog.js":"4","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SnackSetProducts.js":"5","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SnackFreeturProducts.js":"6","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SnackRollsProducts.js":"7","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/DessertProducts.js":"8","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/DrinkProducts.js":"9","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SauceProducts.js":"10","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/PizzaProducts.js":"11","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SnackProducts.js":"12","/Users/alex.vysocki/Desktop/Project/pizza-app/src/Slider.js":"13","/Users/alex.vysocki/Desktop/Project/pizza-app/src/Context.js":"14","/Users/alex.vysocki/Desktop/Project/pizza-app/src/context.js":"15","/Users/alex.vysocki/Desktop/Project/pizza-app/src/cartAdd.js":"16","/Users/alex.vysocki/Desktop/Project/pizza-app/src/CartAdd.js":"17"},{"size":219,"mtime":1617784762582,"results":"18","hashOfConfig":"19"},{"size":6191,"mtime":1619794046461,"results":"20","hashOfConfig":"19"},{"size":7103,"mtime":1619790369153,"results":"21","hashOfConfig":"19"},{"size":1759,"mtime":1619685599575,"results":"22","hashOfConfig":"19"},{"size":1758,"mtime":1619684618092,"results":"23","hashOfConfig":"19"},{"size":1879,"mtime":1619684589498,"results":"24","hashOfConfig":"19"},{"size":1902,"mtime":1619684611933,"results":"25","hashOfConfig":"19"},{"size":1745,"mtime":1619684558825,"results":"26","hashOfConfig":"19"},{"size":1723,"mtime":1619684565612,"results":"27","hashOfConfig":"19"},{"size":1652,"mtime":1619684580828,"results":"28","hashOfConfig":"19"},{"size":1837,"mtime":1619684551233,"results":"29","hashOfConfig":"19"},{"size":1801,"mtime":1619684596905,"results":"30","hashOfConfig":"19"},{"size":697,"mtime":1619356029513,"results":"31","hashOfConfig":"19"},{"size":91,"mtime":1617785265914,"results":"32","hashOfConfig":"33"},{"size":91,"mtime":1617785265914,"results":"34","hashOfConfig":"19"},{"size":2045,"mtime":1618409339963,"results":"35","hashOfConfig":"33"},{"size":4832,"mtime":1619346504252,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m7h3me",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gfq241",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"/Users/alex.vysocki/Desktop/Project/pizza-app/src/index.js",[],"/Users/alex.vysocki/Desktop/Project/pizza-app/src/App.js",["83","84"],"/Users/alex.vysocki/Desktop/Project/pizza-app/src/Cart.js",["85","86","87","88","89","90","91","92"],"import React, {useContext, useState} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport Context from './context';\nimport CartAdd from './CartAdd';\n\nfunction Cart() {\n\n    let {cart, setCart, totalCost, setTotalCost, cartAmount, setCartAmount} = useContext(Context);\n\n    const [checked, setChecked] = useState(false);\n\n    const openPopup = function () {\n        if (totalCost < 15) {\n            return alert('Необходимая сумма для заказа 15 рублей. Пожалуйста, добавьте что-нибудь еще')\n        }\n        const popup = document.querySelector('.order-popup');\n        popup.classList.add('popup-open');\n    };\n\n    const exitPopup = function () {\n        const popup = document.querySelector('.order-popup');\n        popup.classList.remove('popup-open');\n    };\n\n    const sbmtAlrt = function (e) {\n        e.preventDefault();\n        \n        // code\n\n        exitPopup();\n        alert('Спасибо за ваш заказ. Оператор свяжется с вами в ближайшее время')\n        setCart('')\n        localStorage.setItem('cart', cart);\n        setCartAmount(0);\n    };\n\n    return (\n        <div className=\"сart\">\n            <div className=\"cart-container\">\n                <a name=\"top\"></a>\n                <h3 className=\"cart-title\">Корзина</h3>\n                <div className=\"cart-list\">\n                    <CartAdd />\n                </div>\n                <div className=\"cart-alert\">Внимание, минимальная сумма заказа для доставки 15 руб.<br></br>Чтобы добавить позицию в заказ <NavLink href=\"#top\" to=\"/\">вернитесь в меню</NavLink></div>\n                <div className=\"cart-cost\">\n                    <div className=\"cart-cost-container\">\n                        Сумма заказа:<span><span>{totalCost}</span> руб.</span>\n                    </div>\n                </div>\n                <div className=\"cart-btn-container\">\n                    <button className=\"return-btn\"><NavLink to='/'>Вернуться в меню</NavLink></button>\n                    <button className=\"order-btn\" onClick={openPopup}><a href=\"#\">Заказать</a></button>\n                </div>\n                <div className=\"order-popup\">\n                    <div className=\"popup-container\">\n                        <h3>Куда доставить?</h3>\n                        <form method=\"post\" className=\"form-container\">\n                            <div className=\"input-wrapper lg-2\">\n                                <input className=\"form-input\" type=\"text\" name=\"Имя\" placeholder=\"Ваше имя\"></input>\n                            </div>\n                            <div className=\"input-wrapper lg-2\">\n                                <input className=\"form-input\" type=\"tel\" name=\"Номер телефона\" placeholder=\"Контактный номер телефона\"></input>\n                            </div>\n                            <div className=\"input-wrapper lg-3\">\n                                <input className=\"form-input\" type=\"text\" name=\"Улица\" placeholder=\"Улица\"></input>\n                            </div>\n                            <div className=\"input-wrapper lg-1\">\n                                <input className=\"form-input\" type=\"text\" name=\"Дом\" placeholder=\"Дом\"></input>\n                            </div>\n                            <div className=\"input-wrapper lg-1\">\n                                <input className=\"form-input\" type=\"number\" name=\"Квартира\" placeholder=\"Квартира\"></input>\n                            </div>\n                            <div className=\"input-wrapper lg-1\">\n                                <input className=\"form-input\" type=\"text\" name=\"Подъезд\" placeholder=\"Подъезд\"></input>\n                            </div>\n                            <div className=\"input-wrapper lg-1\">\n                                <input className=\"form-input\" type=\"text\" name=\"Код двери\" placeholder=\"Код двери\"></input>\n                            </div>\n                            <div className=\"input-wrapper lg-1\">\n                                <input className=\"form-input\" type=\"number\" name=\"Этаж\" placeholder=\"Этаж\"></input>\n                            </div>\n                            <div className=\"input-wrapper lg-4\">\n                                <textarea className=\"form-textarea\" name=\"Комментарий\" maxLength=\"254\" rows=\"3\" placeholder=\"Комментарий\"></textarea>\n                            </div>\n                            <div className=\"payment-wrapper\">\n                                <hr></hr>\n                                <h5>Оплата</h5>\n                                <div className=\"payment\">\n                                    <div className=\"payment-child\">\n                                        <label className=\"label-control\">\n                                            <input className=\"payment-input\" type=\"radio\" name=\"Оплата\" value=\"Наличными\" onChange={() => setChecked(\"Наличными\")} checked={checked == \"Наличными\"}></input>\n                                            Наличными\n                                        </label>\n                                    </div>\n                                    <div className=\"payment-child\">\n                                        <label className=\"label-control\">\n                                            <input className=\"payment-input\" type=\"radio\" name=\"Оплата\" value=\"Картой курьеру\" onChange={() => setChecked(\"Картой курьеру\")} checked={checked == \"Картой курьеру\"}></input>\n                                            Картой курьеру\n                                        </label>\n                                    </div>\n                                    <div className=\"payment-child\">\n                                        <label className=\"label-control\">\n                                            <input className=\"payment-input\" type=\"radio\" name=\"Оплата\" value=\"Картой онлайн\" onChange={() => setChecked(\"Картой онлайн\")} checked={checked == \"Картой онлайн\"}></input>\n                                            Картой онлайн\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                            <button className=\"confirm-btn\" type=\"submit\" onClick={sbmtAlrt}>Подтвердить заказ</button>\n                        </form>\n                        <button className=\"form-close-btn\" type=\"button\" onClick={exitPopup}>\n                            <i></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Cart;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/Catalog.js",["93","94","95","96","97","98","99","100","101","102"],"import React from 'react';\n\nimport PizzaProducts from './ProductsComponents/PizzaProducts.js';\nimport SnackProducts from './ProductsComponents/SnackProducts';\nimport SnackSetProducts from './ProductsComponents/SnackSetProducts';\nimport SnackFreeturProducts from './ProductsComponents/SnackFreeturProducts';\nimport SnackRollsProducts from './ProductsComponents/SnackRollsProducts';\nimport DessertProducts from './ProductsComponents/DessertProducts';\nimport DrinkProducts from './ProductsComponents/DrinkProducts';\nimport SauceProducts from './ProductsComponents/SauceProducts';\n\nimport SliderComponent from './Slider';\n\nconst Catalog = () => {\n\n    return (\n        <div className=\"main-container\">\n\n            <SliderComponent />\n\n            <div className=\"main-pizzas\">\n                <a name=\"pizzas\"></a>\n                <h3>Пиццы</h3>\n                <PizzaProducts />\n            </div>\n            <div className=\"main-snacks\">\n                <a name=\"snacks\"></a>\n                <h3>Закуски</h3>\n                <SnackProducts />\n                <SnackSetProducts />\n                <SnackFreeturProducts />\n                <SnackRollsProducts />\n            </div>\n            <div className=\"main-desserts\">\n                <a name=\"desserts\"></a>\n                <h3>Десерты</h3>\n                <DessertProducts />\n            </div>\n            <div className=\"main-drinks\">\n                <a name=\"drinks\"></a>\n                <h3>Напитки</h3>\n                <DrinkProducts />\n            </div>\n            <div className=\"main-sauces\">\n                <a name=\"sauces\"></a>\n                <h3>Соусы</h3>\n                <SauceProducts />\n            </div>\n        </div>\n    )\n}\n\nexport default Catalog;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SnackSetProducts.js",["103"],"import React, {useContext} from 'react';\n\nimport Context from '../context';\n\nconst SnackSetProducts = function () {\n\n    const SnackSetProducts = require('../json/products.json');\n\n    const productArr = Object.values(SnackSetProducts.snacksset);\n\n    let {cart, setCart} = useContext(Context);\n\n    let cartArr = {};\n\n    if (cart.length > 0) {\n        cartArr = JSON.parse(cart);\n    }\n\n    if (!cartArr.snacksset) cartArr.snacksset = [];\n\n    const toCart = function (event) {\n        const li = event.target.closest('li');\n\n        if (cartArr.snacksset.indexOf(li.dataset.id) === -1) {\n            cartArr.snacksset.push(li.dataset.id);\n\n            let cartStr = JSON.stringify(cartArr);\n            localStorage.setItem('cart', cartStr);\n\n            setCart(cartStr);\n        }\n    };\n \n    return (\n        <ul className=\"snacks-goods-set\">{\n            productArr.map((item, index) =>\n                <li className=\"product\" key={index} data-id={index}>\n                    <div className=\"product-img\">\n                        <img src={item.img}></img>\n                    </div>\n                    <div className=\"product-description\">\n                        <h3>{item.name}</h3>\n                        <div className=\"size-weight\">{item.size}</div>\n                    </div>\n                    <div className=\"add-container\">\n                        <div className=\"cost\">{item.cost}</div>\n                        {cartArr.snacksset.indexOf(item.id) === -1 ? <button className=\"add-btn\" onClick={toCart}>В корзину</button> : <button className=\"add-btn at-cart\" onClick={toCart}>В корзине</button>}\n                    </div>\n                </li>\n            )    \n        }</ul>\n    );\n};\n\nexport default SnackSetProducts;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SnackFreeturProducts.js",["104"],"import React, {useContext} from 'react';\nimport Context from '../context';\n\nconst SnackFreeturProducts = function () {\n\n    const SnackFreeturProducts = require('../json/products.json');\n\n    const productArr = Object.values(SnackFreeturProducts.snacksfreetur);\n\n    let {cart, setCart} = useContext(Context);\n\n    let cartArr = {};\n\n    if (cart.length > 0) {\n        cartArr = JSON.parse(cart);\n    }\n\n    if (!cartArr.snacksfreetur) cartArr.snacksfreetur = [];\n\n    const toCart = function (event) {\n        const li = event.target.closest('li');\n\n        if (cartArr.snacksfreetur.indexOf(li.dataset.id) === -1) {\n            cartArr.snacksfreetur.push(li.dataset.id);\n\n            let cartStr = JSON.stringify(cartArr);\n            localStorage.setItem('cart', cartStr);\n\n            setCart(cartStr);\n        }\n    };\n \n    return (\n        <ul className=\"snacks-goods-freetur\">{\n            productArr.map((item, index) =>\n                <li className=\"product\" key={index} data-id={index}>\n                    <div className=\"product-img\">\n                        <img src={item.img}></img>\n                    </div>\n                    <div className=\"product-description\">\n                        <h3>{item.name}</h3>\n                        <div className=\"size-weight\">{item.size}</div>\n                        <div className=\"description\">{item.description}</div>\n                    </div>\n                    <div className=\"add-container\">\n                        <div className=\"cost\">{item.cost}</div>\n                        {cartArr.snacksfreetur.indexOf(item.id) === -1 ? <button className=\"add-btn\" onClick={toCart}>В корзину</button> : <button className=\"add-btn at-cart\" onClick={toCart}>В корзине</button>}\n                    </div>\n                </li>\n            )    \n        }</ul>\n    );\n};\n\nexport default SnackFreeturProducts;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SnackRollsProducts.js",["105"],"import React, {useContext} from 'react';\nimport Context from '../context';\n\n// import image from './images/pizzas/vega.jpg'\n\nconst SnackRollProducts = function () {\n\n    const SnackRollProducts = require('../json/products.json');\n\n    const productArr = Object.values(SnackRollProducts.snacksrolls);\n\n    let {cart, setCart} = useContext(Context);\n\n    let cartArr = {};\n\n    if (cart.length > 0) {\n        cartArr = JSON.parse(cart);\n    }\n\n    if (!cartArr.snacksrolls) cartArr.snacksrolls = [];\n\n    const toCart = function (event) {\n        const li = event.target.closest('li');\n\n        if (cartArr.snacksrolls.indexOf(li.dataset.id) === -1) {\n            cartArr.snacksrolls.push(li.dataset.id);\n\n            let cartStr = JSON.stringify(cartArr);\n            localStorage.setItem('cart', cartStr);\n\n            setCart(cartStr);\n        }\n    };\n \n    return (\n        <ul className=\"snacks-goods-rolls\">{\n            productArr.map((item, index) =>\n                <li className=\"product\" key={index} data-id={index}>\n                    <div className=\"product-img\">\n                        <img src={item.img}></img>\n                    </div>\n                    <div className=\"product-description\">\n                        <h3>{item.name}</h3>\n                        <div className=\"size-weight\">{item.size}</div>\n                        <div className=\"description\">{item.description}</div>\n                    </div>\n                    <div className=\"add-container\">\n                        <div className=\"cost\">{item.cost}</div>\n                        {cartArr.snacksrolls.indexOf(item.id) === -1 ? <button className=\"add-btn\" onClick={toCart}>В корзину</button> : <button className=\"add-btn at-cart\" onClick={toCart}>В корзине</button>}\n                    </div>\n                </li>\n            )    \n        }</ul>\n    );\n};\n\nexport default SnackRollProducts;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/DessertProducts.js",["106"],"import React, {useContext} from 'react';\nimport Context from '../context';\n\nconst DessertProducts = function () {\n\n    const DessertProducts = require('../json/products.json');\n\n    const productArr = Object.values(DessertProducts.desserts);\n\n    let {cart, setCart} = useContext(Context);\n\n    let cartArr = {};\n\n    if (cart.length > 0) {\n        cartArr = JSON.parse(cart);\n    }\n\n    if (!cartArr.desserts) cartArr.desserts = [];\n\n    const toCart = function (event) {\n        const li = event.target.closest('li');\n\n        if (cartArr.desserts.indexOf(li.dataset.id) === -1) {\n            cartArr.desserts.push(li.dataset.id);\n\n            let cartStr = JSON.stringify(cartArr);\n            localStorage.setItem('cart', cartStr);\n\n            setCart(cartStr);\n        }\n    };\n \n    return (\n        <ul className=\"desserts-goods\">{\n            productArr.map((item, index) =>\n                <li className=\"product\" key={index} data-id={index}>\n                    <div className=\"product-img\">\n                        <img src={item.img}></img>\n                    </div>\n                    <div className=\"product-description\">\n                        <h3>{item.name}</h3>\n                        <div className=\"size-weight\">{item.size}</div>\n                    </div>\n                    <div className=\"add-container\">\n                        <div className=\"cost\">{item.cost}</div>\n                        {cartArr.desserts.indexOf(item.id) === -1 ? <button className=\"add-btn\" onClick={toCart}>В корзину</button> : <button className=\"add-btn at-cart\" onClick={toCart}>В корзине</button>}\n                    </div>\n                </li>\n            )    \n        }</ul>\n    );\n};\n\nexport default DessertProducts;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/DrinkProducts.js",["107"],"import React, {useContext} from 'react';\nimport Context from '../context';\n\nconst DrinkProducts = function () {\n\n    const DrinkProducts = require('../json/products.json');\n\n    const productArr = Object.values(DrinkProducts.drinks);\n\n    let {cart, setCart} = useContext(Context);\n\n    let cartArr = {};\n\n    if (cart.length > 0) {\n        cartArr = JSON.parse(cart);\n    }\n\n    if (!cartArr.drinks) cartArr.drinks = [];\n\n    const toCart = function (event) {\n        const li = event.target.closest('li');\n\n        if (cartArr.drinks.indexOf(li.dataset.id) === -1) {\n            cartArr.drinks.push(li.dataset.id);\n\n            let cartStr = JSON.stringify(cartArr);\n            localStorage.setItem('cart', cartStr);\n\n            setCart(cartStr);\n        }\n    };\n \n    return (\n        <ul className=\"drinks-goods\">{\n            productArr.map((item, index) =>\n                <li className=\"product\" key={index} data-id={index}>\n                    <div className=\"product-img\">\n                        <img src={item.img}></img>\n                    </div>\n                    <div className=\"product-description\">\n                        <h3>{item.name}</h3>\n                        <div className=\"size-weight\">{item.size}</div>\n                    </div>\n                    <div className=\"add-container\">\n                        <div className=\"cost\">{item.cost}</div>\n                        {cartArr.drinks.indexOf(item.id) === -1 ? <button className=\"add-btn\" onClick={toCart}>В корзину</button> : <button className=\"add-btn at-cart\" onClick={toCart}>В корзине</button>}\n                    </div>\n                </li>\n            )    \n        }</ul>\n    );\n};\n\nexport default DrinkProducts;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SauceProducts.js",["108"],"import React, {useContext} from 'react';\nimport Context from '../context';\n\nconst SauceProducts = function () {\n\n    const SauceProducts = require('../json/products.json');\n\n    const productArr = Object.values(SauceProducts.sauces);\n\n    let {cart, setCart} = useContext(Context);\n\n    let cartArr = {};\n\n    if (cart.length > 0) {\n        cartArr = JSON.parse(cart);\n    }\n\n    if (!cartArr.sauces) cartArr.sauces = [];\n\n    const toCart = function (event) {\n        const li = event.target.closest('li');\n\n        if (cartArr.sauces.indexOf(li.dataset.id) === -1) {\n            cartArr.sauces.push(li.dataset.id);\n\n            let cartStr = JSON.stringify(cartArr);\n            localStorage.setItem('cart', cartStr);\n\n            setCart(cartStr);\n        }\n    };\n \n    return (\n        <ul className=\"sauces-goods\">{\n            productArr.map((item, index) =>\n                <li className=\"product\" key={index} data-id={index}>\n                    <div className=\"product-img\">\n                        <img src={item.img}></img>\n                    </div>\n                    <div className=\"product-description\">\n                        <h3>{item.name}</h3>\n                    </div>\n                    <div className=\"add-container\">\n                        <div className=\"cost\">{item.cost}</div>\n                        {cartArr.sauces.indexOf(item.id) === -1 ? <button className=\"add-btn\" onClick={toCart}>В корзину</button> : <button className=\"add-btn at-cart\" onClick={toCart}>В корзине</button>}\n                    </div>\n                </li>\n            )    \n        }</ul>\n    );\n};\n\nexport default SauceProducts;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/PizzaProducts.js",["109"],"import React, { useContext } from 'react';\nimport Context from '../context';\n\nconst PizzaProducts = function () {\n\n    const PizzaProducts = require('../json/products.json');\n\n    const productArr = Object.values(PizzaProducts.pizzas);\n\n    let {cart, setCart} = useContext(Context);\n\n    let cartArr = {};\n\n    if (cart.length > 0) {\n        cartArr = JSON.parse(cart);\n    }\n\n    if (!cartArr.pizzas) cartArr.pizzas = [];\n\n    const toCart = function (event) {\n        const li = event.target.closest('li');\n\n        if (cartArr.pizzas.indexOf(li.dataset.id) === -1) {\n            cartArr.pizzas.push(li.dataset.id);\n\n            console.log(cartArr)\n\n            let cartStr = JSON.stringify(cartArr);\n            localStorage.setItem('cart', cartStr);\n\n            setCart(cartStr);\n        }\n    };\n \n    return (\n        <ul className=\"pizzas-goods\">{\n            productArr.map((item, index) =>\n                <li className=\"product\" key={index} data-id={index}>\n                    <div className=\"product-img\">\n                        <img src={item.img}></img>\n                    </div>\n                    <div className=\"product-description\">\n                        <h3>{item.name}</h3>\n                        <div className=\"size-weight\">{item.size}</div>\n                        <div className=\"description\">{item.description}</div>\n                    </div>\n                    <div className=\"add-container\">\n                        <div className=\"cost\">{item.cost}</div>\n                        {cartArr.pizzas.indexOf(item.id) === -1 ? <button className=\"add-btn\" onClick={toCart}>В корзину</button> : <button className=\"add-btn at-cart\" onClick={toCart}>В корзине</button>}\n                    </div>\n                </li>\n            )    \n        }</ul>\n    );\n};\n\nexport default PizzaProducts;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/ProductsComponents/SnackProducts.js",["110"],"import React, {useContext} from 'react';\nimport Context from '../context';\n\nconst SnackProducts = function () {\n\n    const SnackProducts = require('../json/products.json');\n\n    const productArr = Object.values(SnackProducts.snacks);\n\n    let {cart, setCart} = useContext(Context);\n\n    let cartArr = {};\n\n    if (cart.length > 0) {\n        cartArr = JSON.parse(cart);\n    }\n\n    if (!cartArr.snacks) cartArr.snacks = [];\n\n    const toCart = function (event) {\n        const li = event.target.closest('li');\n\n        if (cartArr.snacks.indexOf(li.dataset.id) === -1) {\n            cartArr.snacks.push(li.dataset.id);\n\n            let cartStr = JSON.stringify(cartArr);\n            localStorage.setItem('cart', cartStr);\n\n            setCart(cartStr);\n        }\n    };\n \n    return (\n        <ul className=\"snacks-goods\">{\n            productArr.map((item, index) =>\n                <li className=\"product\" key={index} data-id={index}>\n                    <div className=\"product-img\">\n                        <img src={item.img}></img>\n                    </div>\n                    <div className=\"product-description\">\n                        <h3>{item.name}</h3>\n                        <div className=\"size-weight\">{item.size}</div>\n                        <div className=\"description\">{item.description}</div>\n                    </div>\n                    <div className=\"add-container\">\n                        <div className=\"cost\">{item.cost}</div>\n                        {cartArr.snacks.indexOf(item.id) === -1 ? <button className=\"add-btn\" onClick={toCart}>В корзину</button> : <button className=\"add-btn at-cart\" onClick={toCart}>В корзине</button>}\n                    </div>\n                </li>\n            )    \n        }</ul>\n    );\n};\n\nexport default SnackProducts;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/Slider.js",["111"],"import React from 'react';\nimport Slider from \"react-slick\";\n\nconst SliderComponent = function () {\n\n    const images = require('./json/images.json');\n\n    const slidesArr = Object.values(images.slides);\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n    };\n\n    return (\n        <div className=\"slider-container\">\n            <Slider className=\"slider\" {...settings}>\n                {slidesArr.map((item, index) => {\n                    return <div data-index={index} key={index}><img src={item}/></div>\n                })}\n            </Slider>\n        </div>\n    );\n};\n\nexport default SliderComponent;","/Users/alex.vysocki/Desktop/Project/pizza-app/src/Context.js",[],"/Users/alex.vysocki/Desktop/Project/pizza-app/src/context.js",[],"/Users/alex.vysocki/Desktop/Project/pizza-app/src/cartAdd.js",["112","113","114","115","116"],"/Users/alex.vysocki/Desktop/Project/pizza-app/src/CartAdd.js",["117","118","119","120","121","122","123","124"],"import React, { useState, useContext, useEffect } from 'react';\nimport { renderIntoDocument } from 'react-dom/test-utils';\nimport Context from './context';\n\nimport productsData from './json/products.json';\n\nconst CartAdd = function() {\n\n    let {cart, setCart, totalCost, setTotalCost} = useContext(Context);\n\n    let cartProduct = [];\n    let cartProductJsx = <div className='cart-item'><div className=\"cart-empty-text\">Корзина пуста</div></div>;\n\n    const deleteItem = function (event) {\n\n        const elem = event.target.closest('.cart-item');\n        \n        const itemType = elem.dataset.type;\n        const itemId= elem.dataset.id;\n\n        const cartObj = JSON.parse(cart);\n        let cartObj2 = JSON.parse(cart);\n\n\n        if (cartObj[itemType].indexOf(itemId) != -1) {\n            cartObj2 = cartObj2[itemType];\n\n            cartObj2.forEach((item, index) => {\n                if (item === itemId) {\n                    delete cartObj[itemType][index]\n                }\n            });\n\n            cartObj[itemType] = cartObj[itemType].filter(item => {\n                if (item) return item;\n            });\n\n            const cartStr = JSON.stringify(cartObj);\n\n            setCart(cartStr);\n        }\n    };\n    \n    const minusItem = function (event) {\n        const elem = event.target.closest('.cart-item');\n        \n        const itemType = elem.dataset.type;\n        const itemId= elem.dataset.id;\n\n        const cartObj = JSON.parse(cart);\n\n        const index = cartObj[itemType].indexOf(itemId);\n\n        cartObj[itemType].splice(index, 1);\n\n        const cartStr = JSON.stringify(cartObj);\n\n        setCart(cartStr);\n\n    };\n\n    const plusItem = function (event) {\n        const elem = event.target.closest('.cart-item');\n        \n        const itemType = elem.dataset.type;\n        const itemId= elem.dataset.id;\n\n        const cartObj = JSON.parse(cart);\n\n        const index = cartObj[itemType].indexOf(itemId);\n\n        cartObj[itemType].push(cartObj[itemType][index]);\n\n        const cartStr = JSON.stringify(cartObj);\n\n        setCart(cartStr);\n\n    };\n\n    let summa;\n\n    const changeSumm = function (summ) {\n        summa = summ;\n        return summa;\n    };\n\n    useEffect(function () {\n        if(summa === undefined) summa = 0;\n\t\tsetTotalCost(summa)\n\t}, [changeSumm]);\n\n    if (cart.length === 0) {\n        return cartProductJsx;\n    } else {\n        let cartData = JSON.parse(cart);\n\n        let keys = Object.keys(cartData)\n\n\n        keys.forEach(key => {\n            cartData[key].forEach(indexProduct => {\n                productsData[key]['product' + (+indexProduct + 1)].type = key;\n                productsData[key]['product' + (+indexProduct + 1)].id = indexProduct;\n                cartProduct.push(productsData[key]['product' + (+indexProduct + 1)])\n            });\n        });\n\n\n        if (cartProduct.length !== 0) {\n\n            console.log(cartProduct)\n\n            let cartProductRendered = [];\n\n            let summTotalCost = 0;\n           \n            cartProductJsx = cartProduct.map((item, index) => {\n\n                let cartObj = JSON.parse(cart);\n                let amount = 0;\n\n                cartObj[item.type].forEach(cartItem => {\n                    if (cartItem === item.id) amount++;\n                })\n\n                if(amount === 0) {\n                    amount = 1;\n                    summTotalCost = 0;\n                }\n\n                if (cartProductRendered.indexOf(item.id+item.type) === -1) {\n                    cartProductRendered.push(item.id+item.type);\n\n                    let itemCost = Number((parseFloat(item.cost.replace(',', '.'))*amount).toFixed(2));\n                    summTotalCost += itemCost;\n\n                    return <div className=\"cart-item\" key={index} data-index={index} data-id={item.id} data-type={item.type}>\n                        <div className=\"item-image\"><div className='image-wrapper'><img src={item.img}></img></div></div>\n                        <div className=\"item-title\">{item.name}</div>\n                        <div className=\"item-amount\">\n                            <div className=\"amount-changer\" onClick={minusItem}><span>-</span></div>\n                            <div className=\"amount\">{amount}</div>\n                            <div className=\"amount-changer\" onClick={plusItem}><span>+</span></div>\n                        </div>\n                        <div className=\"item-price\"><span className=\"price-value\">{itemCost} руб.</span></div>\n                        <div className=\"item-delete\"><div className=\"delete-btn\" onClick={deleteItem}><div className=\"cross\"></div></div></div>\n                    </div>\n                }\n\n            })\n\n            changeSumm(Number(summTotalCost.toFixed(1)));\n        }\n\n        return cartProductJsx;\n    }\n};\n\nexport default CartAdd;",{"ruleId":"125","severity":1,"message":"126","line":47,"column":5,"nodeType":"127","endLine":47,"endColumn":11,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":147,"column":42,"nodeType":"131","endLine":147,"endColumn":59},{"ruleId":"132","severity":1,"message":"133","line":8,"column":36,"nodeType":"134","messageId":"135","endLine":8,"endColumn":48},{"ruleId":"132","severity":1,"message":"136","line":8,"column":50,"nodeType":"134","messageId":"135","endLine":8,"endColumn":60},{"ruleId":"137","severity":1,"message":"138","line":40,"column":17,"nodeType":"131","endLine":40,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":40,"column":17,"nodeType":"131","endLine":40,"endColumn":31},{"ruleId":"139","severity":1,"message":"141","line":53,"column":71,"nodeType":"131","endLine":53,"endColumn":83},{"ruleId":"142","severity":1,"message":"143","line":92,"column":181,"nodeType":"144","messageId":"145","endLine":92,"endColumn":183},{"ruleId":"142","severity":1,"message":"143","line":98,"column":191,"nodeType":"144","messageId":"145","endLine":98,"endColumn":193},{"ruleId":"142","severity":1,"message":"143","line":104,"column":189,"nodeType":"144","messageId":"145","endLine":104,"endColumn":191},{"ruleId":"137","severity":1,"message":"138","line":22,"column":17,"nodeType":"131","endLine":22,"endColumn":34},{"ruleId":"139","severity":1,"message":"140","line":22,"column":17,"nodeType":"131","endLine":22,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":27,"column":17,"nodeType":"131","endLine":27,"endColumn":34},{"ruleId":"139","severity":1,"message":"140","line":27,"column":17,"nodeType":"131","endLine":27,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":35,"column":17,"nodeType":"131","endLine":35,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":35,"column":17,"nodeType":"131","endLine":35,"endColumn":36},{"ruleId":"137","severity":1,"message":"138","line":40,"column":17,"nodeType":"131","endLine":40,"endColumn":34},{"ruleId":"139","severity":1,"message":"140","line":40,"column":17,"nodeType":"131","endLine":40,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":45,"column":17,"nodeType":"131","endLine":45,"endColumn":34},{"ruleId":"139","severity":1,"message":"140","line":45,"column":17,"nodeType":"131","endLine":45,"endColumn":34},{"ruleId":"129","severity":1,"message":"130","line":39,"column":25,"nodeType":"131","endLine":39,"endColumn":45},{"ruleId":"129","severity":1,"message":"130","line":38,"column":25,"nodeType":"131","endLine":38,"endColumn":45},{"ruleId":"129","severity":1,"message":"130","line":40,"column":25,"nodeType":"131","endLine":40,"endColumn":45},{"ruleId":"129","severity":1,"message":"130","line":38,"column":25,"nodeType":"131","endLine":38,"endColumn":45},{"ruleId":"129","severity":1,"message":"130","line":38,"column":25,"nodeType":"131","endLine":38,"endColumn":45},{"ruleId":"129","severity":1,"message":"130","line":38,"column":25,"nodeType":"131","endLine":38,"endColumn":45},{"ruleId":"129","severity":1,"message":"130","line":40,"column":25,"nodeType":"131","endLine":40,"endColumn":45},{"ruleId":"129","severity":1,"message":"130","line":38,"column":25,"nodeType":"131","endLine":38,"endColumn":45},{"ruleId":"129","severity":1,"message":"130","line":22,"column":64,"nodeType":"131","endLine":22,"endColumn":81},{"ruleId":"132","severity":1,"message":"146","line":8,"column":17,"nodeType":"134","messageId":"135","endLine":8,"endColumn":23},{"ruleId":"147","severity":2,"message":"148","line":8,"column":27,"nodeType":"134","endLine":8,"endColumn":35},{"ruleId":"149","severity":2,"message":"150","line":9,"column":13,"nodeType":"134","messageId":"151","endLine":9,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":13,"column":45,"nodeType":"131","endLine":13,"endColumn":69},{"ruleId":"129","severity":1,"message":"130","line":21,"column":79,"nodeType":"131","endLine":21,"endColumn":96},{"ruleId":"132","severity":1,"message":"152","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"153","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":28},{"ruleId":"132","severity":1,"message":"154","line":9,"column":25,"nodeType":"134","messageId":"135","endLine":9,"endColumn":34},{"ruleId":"142","severity":1,"message":"155","line":25,"column":47,"nodeType":"144","messageId":"145","endLine":25,"endColumn":49},{"ruleId":"156","severity":1,"message":"157","line":34,"column":63,"nodeType":"158","messageId":"159","endLine":34,"endColumn":65},{"ruleId":"125","severity":1,"message":"160","line":88,"column":41,"nodeType":"161","endLine":88,"endColumn":42},{"ruleId":"156","severity":1,"message":"162","line":117,"column":60,"nodeType":"158","messageId":"159","endLine":117,"endColumn":62},{"ruleId":"129","severity":1,"message":"130","line":138,"column":84,"nodeType":"131","endLine":138,"endColumn":104},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkCartAmount'. Either include it or remove the dependency array.","ArrayExpression",["163"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'setTotalCost' is assigned a value but never used.","Identifier","unusedVar","'cartAmount' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setBin' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"cartAdd\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'pizzas' is not defined.","undef","'useState' is defined but never used.","'renderIntoDocument' is defined but never used.","'totalCost' is assigned a value but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Assignments to the 'summa' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Array.prototype.map() expects a value to be returned at the end of arrow function.",{"desc":"164","fix":"165"},"Update the dependencies array to be: [cart, checkCartAmount]",{"range":"166","text":"167"},[971,977],"[cart, checkCartAmount]"]